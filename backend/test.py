#!/usr/bin/env python
"""–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—á—ë—Ç –≤ Telegram (–±–µ–∑ –∑–∞–ø–∏—Å–∏ –≤ –ë–î)."""
import os
import argparse
import logging
from typing import Optional

import requests
from dotenv import load_dotenv

# ---------- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è ----------
load_dotenv()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
CHAT_ID        = os.getenv("CHAT_ID")

if not TELEGRAM_TOKEN or not CHAT_ID:
    raise ValueError("TELEGRAM_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env")

logging.basicConfig(level=logging.INFO, format="%(message)s")
log = logging.getLogger(__name__)

# ---------- –õ–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ ----------

def send_to_telegram(message: str) -> Optional[str]:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç message –≤ Telegram, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ None."""
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {
        "chat_id": CHAT_ID,
        "text": message,
        "parse_mode": "Markdown",
    }

    try:
        resp = requests.post(url, data=payload, timeout=10)
        resp.raise_for_status()
        telegram_msg_id = resp.json()["result"]["message_id"]
        return str(telegram_msg_id)
    except requests.exceptions.RequestException as exc:
        log.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {exc}")
        return None

# ---------- –¢–µ–∫—Å—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ----------

REPORT_TEXT = (
    "üóì *–û—Ç—á—ë—Ç 13 ‚Äì 16 –º–∞—è* (UTC+8)\n\n"
    "*13 –º–∞—è*\n"
    "‚Ä¢ 09:57 ‚Äì 19:55 ‚Äî —Å–º–µ–Ω–∞ 10.0 —á\n"
    "‚Ä¢ ‚úÖ –†–∞–±–æ—Ç–∞: 1.9 —á (‚âà19¬†%)\n"
    "‚Ä¢ üöö –î–æ—Ä–æ–≥–∞: 6.1 —á (‚âà61¬†%)\n"
    "‚Ä¢ ‚è∏ –ü—Ä–æ—Å—Ç–æ–π: 1.1 —á (‚âà11¬†%)\n"
    "‚Ü™Ô∏è –ì–ª–∞–≤–Ω–∞—è –ø–æ—Ç–µ—Ä—è ‚Äî –¥–ª–∏—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–µ–∑–¥—ã –º–µ–∂–¥—É —Ç–æ—á–∫–∞–º–∏.\n\n"

    "*14 –º–∞—è*\n"
    "‚Ä¢ 10:03 ‚Äì 20:52 ‚Äî —Å–º–µ–Ω–∞ 10.8 —á\n"
    "‚Ä¢ ‚úÖ –†–∞–±–æ—Ç–∞: 2.2 —á (‚âà20¬†%)\n"
    "‚Ä¢ üöö –î–æ—Ä–æ–≥–∞: 6.8 —á (‚âà63¬†%)\n"
    "‚Ä¢ ‚è∏ –ü—Ä–æ—Å—Ç–æ–π: 0.7 —á (‚âà6¬†%)\n"
    "‚Ü™Ô∏è –°–∏—Ç—É–∞—Ü–∏—è –∞–Ω–∞–ª–æ–≥–∏—á–Ω–∞ 13‚Äë–º—É: –æ—Å–Ω–æ–≤–Ω–æ–µ –≤—Ä–µ–º—è \u2014 –≤ –ø—É—Ç–∏.\n\n"

    "*15 –º–∞—è*\n"
    "‚Ä¢ 10:40 ‚Äì 19:46 ‚Äî —Å–º–µ–Ω–∞ 9.1 —á\n"
    "‚Ä¢ ‚úÖ –†–∞–±–æ—Ç–∞: 3.5 —á (‚âà38¬†%)\n"
    "‚Ä¢ üöö –î–æ—Ä–æ–≥–∞: 4.0 —á (‚âà44¬†%)\n"
    "‚Ä¢ ‚è∏ –ü—Ä–æ—Å—Ç–æ–π: 1.2 —á (‚âà13¬†%)\n"
    "‚Ü™Ô∏è –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ—á—Ç–∏ —É–¥–≤–æ–∏–ª–∞—Å—å: –ø—É—Ç—å —Å–æ–∫—Ä–∞—â—ë–Ω –Ω–∞ ~2¬†—á.\n\n"

    "*16 –º–∞—è*\n"
    "‚Ä¢ 10:14 ‚Äì 21:15 ‚Äî —Å–º–µ–Ω–∞ 11.0 —á\n"
    "‚Ä¢ ‚úÖ –†–∞–±–æ—Ç–∞: 4.2 —á (‚âà38¬†%)\n"
    "‚Ä¢ üöö –î–æ—Ä–æ–≥–∞: 4.6 —á (‚âà42¬†%)\n"
    "‚Ä¢ ‚è∏ –ü—Ä–æ—Å—Ç–æ–π: 1.6 —á (‚âà15¬†%)\n"
    "‚Ü™Ô∏è –î–µ—Ä–∂–∏–º —É–ª—É—á—à–µ–Ω–Ω—É—é –¥–æ–ª—é —Ä–∞–±–æ—Ç—ã, –Ω–æ –¥–æ—Ä–æ–≥–∞ –≤—Å—ë –µ—â—ë >40¬†%.\n\n"

    "üìä *–û–±—â–∏–µ –≤—ã–≤–æ–¥—ã*\n"
    "‚Ä¢ 15‚Äì16 –º–∞—è –¥–æ–ª—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã—Ä–æ—Å–ª–∞ –ø–æ—á—Ç–∏ –≤–¥–≤–æ–µ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å 13‚Äì14 –º–∞—è.\n"
    "‚Ä¢ –ü–µ—Ä–µ–µ–∑–¥—ã —Å–æ–∫—Ä–∞—Ç–∏–ª–∏—Å—å –Ω–∞ ~2 —á, –Ω–æ –æ—Å—Ç–∞—é—Ç—Å—è –≥–ª–∞–≤–Ω—ã–º –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–º –≤—Ä–µ–º–µ–Ω–∏.\n\n"
    "üí° *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏*\n"
    "1. –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã ‚Äî –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –≤ –æ–¥–Ω–æ–π –∑–æ–Ω–µ / —Ä–∞–π–æ–Ω–µ.\n"
    "2. –î–µ—Ä–∂–∞—Ç—å –ø—Ä–æ—Å—Ç–æ–π ‚â§1 —á, –¥–µ–ª–∞—è –º–∏–∫—Ä–æ–ø–∞—É–∑—É –≤–æ –≤—Ä–µ–º—è –ø–µ—Ä–µ–µ–∑–¥–∞.\n"
    "3. –ï—â—ë –Ω–∞ 1‚Äì1,5¬†—á —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –¥–æ—Ä–æ–≥—É ‚Äî —ç—Ç–æ –¥–∞—Å—Ç +10‚Äì15¬†% –∫ –ø–æ–ª–µ–∑–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ –±–µ–∑ —É–¥–ª–∏–Ω–µ–Ω–∏—è —Å–º–µ–Ω—ã."
)

# ---------- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ----------

def main() -> None:
    parser = argparse.ArgumentParser(description="–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á—ë—Ç–∞ –≤ Telegram")
    parser.add_argument(
        "-m",
        "--message",
        nargs="*",
        help="–¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∫—Ä—ã—Ç—å –æ—Ç—á—ë—Ç)",
    )
    args = parser.parse_args()

    message_text = " ".join(args.message) if args.message else REPORT_TEXT

    msg_id = send_to_telegram(message_text)
    if msg_id:
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! ID: {msg_id}")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.")

if __name__ == "__main__":
    main()
